# Input Sectioninput {  # Fetch from PostgreSQL  jdbc {    jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.24.jar"    jdbc_driver_class => "org.postgresql.Driver"    jdbc_connection_string => "jdbc:postgresql://postgres:5432/hamf_db"    jdbc_user => "admin"    jdbc_password => "password"    schedule => "* * * * *" # Every minute    statement => "SELECT * FROM features_models_map WHERE last_updated > :sql_last_value"    use_column_value => true    tracking_column => "last_updated"    tracking_column_type => "timestamp"  }  # Fetch from Elasticsearch  elasticsearch {    hosts => ["http://elasticsearch:9200"]    index => "features_models_map"    query => '{"query": {"range": {"last_updated": {"gte": "now-1m"}}}}'    scroll => "5m"    docinfo => true  }}# Filter Sectionfilter {  mutate {    add_field => {      "pipeline_tag" => "bidirectional-sync"    }  }}# Output Sectionoutput {  # Push to Elasticsearch  if [pipeline_tag] == "bidirectional-sync" and [@metadata][_index] != "features_models_map" {    elasticsearch {      hosts => ["http://elasticsearch:9200"]      index => "features_models_map"      document_id => "%{id}" # Use unique ID    }  }  # Push to PostgreSQL  if [pipeline_tag] == "bidirectional-sync" {    jdbc {      driver_jar_path => "/usr/share/logstash/postgresql-42.2.24.jar"      driver_class => "org.postgresql.Driver"      connection_string => "jdbc:postgresql://postgres:5432/hamf_db"      username => "admin"      password => "password"      statement => [        "INSERT INTO features_models_map (model_id, feature_id, accuracy, last_updated) VALUES (?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET accuracy = EXCLUDED.accuracy, last_updated = EXCLUDED.last_updated",        "model_id", "feature_id", "accuracy", "last_updated"      ]    }  }}